USE bddCrie2;
SET FOREIGN_KEY_CHECKS = 0;
set names 'utf8';
ALTER TABLE Utilisateur MODIFY id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT;
ALTER TABLE Utilisateur AUTO_INCREMENT=1;
ALTER TABLE `Lot` DROP FOREIGN KEY `FK_LOT_ACHETEUR`;
ALTER TABLE `Lot` DROP INDEX `FK_LOT_ACHETEUR`;
DROP TABLE Poster;
DROP TABLE Acheteur;
CREATE TABLE Acheteur
(
    id                    INTEGER   UNSIGNED    NOT NULL AUTO_INCREMENT,
    raisonSocial     VARCHAR(100)        NULL,
    adrAcheteur  VARCHAR(100)        NULL,
    villeAcheteur  VARCHAR(100)        NULL,
    cpAcheteur  VARCHAR(100)        NULL,
    numHabilitation VARCHAR(100)    NULL,
    dateinsert DATETIME NOT NULL DEFAULT NOW(),
    datemodif DATETIME NOT NULL DEFAULT NOW(),
    clesession VARCHAR(256) NULL,
    CONSTRAINT PK_ACHETEUR PRIMARY KEY (id),
  	CONSTRAINT FK_ACHETEUR_UTILISATEUR FOREIGN KEY  (id) references Utilisateur (id)
    
) ENGINE = INNODB;
SET @idusermax=(SELECT max(id) FROM Utilisateur);
INSERT INTO TypeUtilisateur VALUES (5, 'Acheteur');
ALTER TABLE Utilisateur CHANGE COLUMN `prenomuser` `prenomuser` VARBINARY(300) NULL DEFAULT NULL COLLATE 'binary' AFTER `nomuser`;
ALTER TABLE Utilisateur CHANGE COLUMN `adrMail` `adrMail` VARBINARY(300) NULL DEFAULT NULL COLLATE 'binary' AFTER `idtypeuser`;
ALTER TABLE Utilisateur CHANGE COLUMN `nomuser` `nomuser` VARBINARY(300) NULL DEFAULT NULL COLLATE 'binary' AFTER `pwd`;
ALTER TABLE Acheteur CHANGE COLUMN `raisonSocial` `raisonSocial` VARBINARY(512) NULL DEFAULT NULL COLLATE 'binary' AFTER `id`;
ALTER TABLE Acheteur CHANGE COLUMN `adrAcheteur` `adrAcheteur` VARBINARY(512) NULL DEFAULT NULL COLLATE 'binary' AFTER `raisonSocial`;
ALTER TABLE Acheteur CHANGE COLUMN `villeAcheteur` `villeAcheteur` VARBINARY(256) NULL DEFAULT NULL COLLATE 'binary' AFTER `adrAcheteur`;
ALTER TABLE Acheteur CHANGE COLUMN `cpAcheteur` `cpAcheteur` VARBINARY(128) NULL DEFAULT NULL COLLATE 'binary' AFTER `villeAcheteur`;
ALTER TABLE Acheteur CHANGE COLUMN `numHabilitation` `numHabilitation` VARBINARY(128) NULL DEFAULT NULL COLLATE 'binary' AFTER `cpAcheteur`;
ALTER TABLE Utilisateur CHANGE COLUMN `login` `login` VARBINARY(256) NULL DEFAULT NULL COLLATE 'binary' AFTER `id`;
ALTER TABLE Utilisateur CHANGE COLUMN `pwd` `pwd` VARBINARY(512) NULL DEFAULT NULL COLLATE 'binary' AFTER `login`;
SET @idusermax=(SELECT max(id) FROM utilisateur);
SET @req=CONCAT("ALTER TABLE Acheteur AUTO_INCREMENT=",(@idusermax+1),";");
PREPARE zzz FROM @req;
EXECUTE zzz;
INSERT INTO Utilisateur (login, pwd, nomuser, prenomuser, idtypeuser, adrMail) VALUES
	(_binary 0x2F362B3463504D62332F6C53714167656D56695571413D3D, _binary 0x35423277754264737958347530303769476C76365A75584D4869496B64656D68416D484D6E3642616F556F5879537757452B74356C6E2B4E71622B337330626F6A4978547132634B65354371316849566F41436C5158555868746D744F4D3773503172644E66483265736F3D, _binary 0x615033636477486E714156696C477256374F79362F513D3D, _binary 0x65507A6C6C4B2F7330447A73672B436833766F536A413D3D, 5, _binary 0x504E5A726A36334345526E67364538646F537568736F5930414650774E556A444E53377A344276525A32773D),
	(_binary 0x2F4B54634A38612F3866304D336C577439312F5974413D3D, _binary 0x33636E52706D2B795852344C5A7856684F5474594A7778314E4142486A73632F78453534344973614367396138633572436869675476796269386A737948346447572B324B62327A376B545771757164683072633458555868746D744F4D3773503172644E66483265736F3D, _binary 0x5A65746E6C726E47543152504D77576D6251566E74673D3D, _binary 0x566239782B665336794166442B536B6D4361492F76673D3D, 5, NULL),
	(_binary 0x756C454661347A6830555566657A2F547463334948673D3D, _binary 0x2B5879382B7638616D4F5A6D735539437457575068796C356E5536556B6C5961532B436A736B71537177356E78723559707A2B2F4353657A6C324D54503346576857576D37385434332F55614D77633773304C4A5058555868746D744F4D3773503172644E66483265736F3D, _binary 0x67546553776C56566A6A59427A2B596E5643535966413D3D, _binary 0x414846656E6E6F6A48517338557A714E546B792F30673D3D, 5, _binary 0x52563874514D425842456F616B314B476E516F4C37586A797637414B4173784A444C33644E6E47735152413D),
	(_binary 0x67796738367A75586E33515445744C6C70485A7941513D3D, _binary 0x4551326A4F5377524B58357730426D632F7A442B725652574654667A772F644F2F5338544E7A39456646447A7563355A425075763642426772574B6851323147582B626848576E664566574A676B7A55566263565348555868746D744F4D3773503172644E66483265736F3D, _binary 0x705074316C4F6C63644A7550556B766532616A396B773D3D, _binary 0x73704E7849764677623349344A3571436832366773673D3D, 5, NULL),
	(_binary 0x4767614D435351635073786A643972737364544953773D3D, _binary 0x317971632F4444435375467A74314B534347594E56664242325144352B5478444743667259354C4D7430596F527134443569326B484F2B5639636B34617366393747434B5535666F543941647348476B336441504B48555868746D744F4D3773503172644E66483265736F3D, _binary 0x366A31784858744E5668493355594E563079564E4C513D3D, _binary 0x483843586741457837655963664148654B587A6465513D3D, 5, NULL),
	(_binary 0x567044435756392F472F434B44733151316E584A6F413D3D, _binary 0x314B57674E655A44394555794237544666304844307075775A69665A4559384F7838414D7133316932773338364C71747546777A3069762F2F4A396A453644355A39306B30594466423874574C7A72587A794E385633555868746D744F4D3773503172644E66483265736F3D, _binary 0x75556C70704A7A5A69447931497571487064577933773D3D, _binary 0x487442564E38786B38612F304236754A516E455539413D3D, 5, NULL),
	(_binary 0x724269413633704D55495A4233527239533032686C773D3D, _binary 0x6E377563423632316A6C2B7744312B6C77745569325A566A792F4E535A4379494956426B363671574A5A31766D48666455512F66724D614E636F7A576F656377343568794A64736568487478324C2B47776953347758555868746D744F4D3773503172644E66483265736F3D, _binary 0x4E56466E516B645439453359467354504E57494B37513D3D, _binary 0x483843586741457837655963664148654B587A6465513D3D, 5, NULL),
	(_binary 0x557759376736784B4F6B2B5936516E32436253642F773D3D, _binary 0x53776C426A6C6C4E3976624F4731646F2F615276514236326D633562634C6B334A325772676D6754346D673849777270457441697774775A4F4441376636457179556874504C6C41324C73707465526F5546712B6A6E555868746D744F4D3773503172644E66483265736F3D, _binary 0x375662556D62757855622F7942324C7A6B4E6D6D50513D3D, _binary 0x7A61586C326858573971787636534672554D756144413D3D, 5, NULL),
	(_binary 0x2B52656B50636746617962497A6F315A556E757938413D3D, _binary 0x49584D516679447A6234444D33433831456A56437666305A31634C7766434850436E4B344A78304838313572514B714C796270786A78656C6F446658737172464E374A4638424647795241326B7336466E526F505048555868746D744F4D3773503172644E66483265736F3D, _binary 0x655253544F744E6F4E503737454F6A4E3179757A5A673D3D, _binary 0x49544D5A4D54303947327A67522F486A534E454942673D3D, 5, NULL),
	(_binary 0x344576724F6171334864704364455A644470394575513D3D, _binary 0x77436E73324A3730536C78324B694775326E427948664D4D476555336636304B356A367349446F49457355466730526C31314A515267415461644E6652534178376C4C48537173726F554673374C567A447553673733555868746D744F4D3773503172644E66483265736F3D, _binary 0x48446453757233705179674661726F3347556D785A513D3D, _binary 0x326E7353723052617A394365633049334C42504D6F413D3D, 5, NULL),
	(_binary 0x3841373545597364533249502F5376534673377457673D3D, _binary 0x61366454353730445A41486C7438544C314F343447334F2F4D49354452535061306D77647553745176714E4C334B6649326D6C4E6B4636526B77792B356F3447493938454A4D4A49617170744634557139344C58686E555868746D744F4D3773503172644E66483265736F3D, _binary 0x6968495852326B56616E6C775658752B4C31343041673D3D, _binary 0x7A76386A58435434724F2F61397164326332457232513D3D, 5, NULL),
	(_binary 0x535552644F7A4462485230325639474646332B5A4A773D3D, _binary 0x38726E77637445584F3176346A68314E324837384F3246482F706E544E6B4672366670644531435062504759445A43323959433957376A656B4A786661346648593759487A3149353646454F7A6E4A72566A59647648555868746D744F4D3773503172644E66483265736F3D, _binary 0x64736336434D5742304B544339564C435A31374655773D3D, _binary 0x6B54524F6E6F2F697138666F2F364F47534C453870513D3D, 5, NULL),
  (_binary 0x4B6E67636A4B666C506E547A5874316B7348376E76513D3D, _binary 0x3258416C554358756D6879564B376D314D32703975352F31536679426F432B66536470535873384D344B566C6A3150454A523850466C33446A4245395979564D70506A32387366357A465463476D506B376A69435748555868746D744F4D3773503172644E66483265736F3D, _binary 0x4557656433325846554F42316F6856634334304A4F513D3D, _binary 0x686F3061386B71583065524D5639525173396B666D673D3D, 4, NULL);
INSERT INTO Acheteur (raisonSocial, adrAcheteur, villeAcheteur, cpAcheteur, numHabilitation) VALUES
	(_binary 0x6B53676850314D38506B547056306C4B75344A5235413D3D, _binary 0x59356D646738545950326D713665463341434A6A5548304C485A706D442B4F442B71705963752F432F56413D, _binary 0x61454A586D6B5266424F654A754C38672B422F5869513D3D, _binary 0x53576C494D684B517462516941666444434D744648513D3D, _binary 0x55326859566D756F756477646E486937664A5A357A773D3D),
	(_binary 0x585062325241516447395A533069426378396B7752513D3D, NULL, _binary 0x61454A586D6B5266424F654A754C38672B422F5869513D3D, _binary 0x53576C494D684B517462516941666444434D744648513D3D, _binary 0x526831642B6A4C7250663668694E4A394431493075773D3D),
	(_binary 0x6B3641454976355A33797A415A657736414C665738734979484262566C486644362F5A352F6F3535492F453D, NULL, _binary 0x42363643524C6670504A4E44314B4F38583947784E513D3D, _binary 0x4271354E48643174456F51304D76484D686E75317A673D3D, _binary 0x65364F49677956486C476861476E3644336D783358773D3D),
	(_binary 0x3763374B655A7A4F2F4F62344B5A474549483245505A3358665644534E7657647A41596A2B69394972576F3D, NULL, _binary 0x61454A586D6B5266424F654A754C38672B422F5869513D3D, _binary 0x53576C494D684B517462516941666444434D744648513D3D, _binary 0x4F637849414F7251387334576D7A67774C7A54746D773D3D),
	(_binary 0x626A4D4A633262755569756C554A75675542746E48786A2F327849534B74546C6E735654782B52335A47493D, NULL, _binary 0x472B76583572796857424245487078713736545571513D3D, _binary 0x597968436479564E4C595861696730316664335545673D3D, _binary 0x532B752B326465436E6D336742546D505637356D58413D3D),
	(_binary 0x302B527157676E4F344159303731316F706654424235316A3576616662776F6166734E67564E75633846773D, NULL, _binary 0x4F585046645453586E3678714941635945784F7864513D3D, _binary 0x4271354E48643174456F51304D76484D686E75317A673D3D, _binary 0x416631636C4E62362F2B73307A44487167794E4531513D3D),
	(_binary 0x6B683233677649774B5A447955502B5278574E5055673D3D, NULL, _binary 0x472B76583572796857424245487078713736545571513D3D, _binary 0x65776C2F325954762B43384B67552F674361714F45513D3D, _binary 0x58644E4254446E6D506E5062527269543665753761773D3D),
	(_binary 0x75726C6E693641437A6F71507969777A6A752B2B4648555868746D744F4D3773503172644E66483265736F3D, NULL, _binary 0x51725478584A52445243676D326E36495255476C4C513D3D, _binary 0x65776C2F325954762B43384B67552F674361714F45513D3D, _binary 0x547244375374647A73705045384F304D333068636D773D3D),
	(_binary 0x41496A6B6D5154446F336B677650574E6D63385A4E6841314F7759674B4A504A47505963354F69496E76493D, NULL, _binary 0x4875686A66666D30696C4A68634258566853542F79413D3D, _binary 0x4271354E48643174456F51304D76484D686E75317A673D3D, _binary 0x6B31703555334C6452686378513672674968397A4A513D3D),
	(_binary 0x3666316C30475130735A586C53357A373577506E36554C5A616F464A72487234624F5A36624642304B2F4D3D, NULL, _binary 0x5630362B4A5A6B6A697A6C6F42384E555749702B47673D3D, _binary 0x61333476644B6A767750724A2B586D6D57474C722F513D3D, _binary 0x6A757A4C3133486E72547954364138672F47716C79413D3D),
	(_binary 0x64735261627255744B37714D4265476C756B555036773D3D, NULL, _binary 0x6A4A47774E7A5337786C553638706354614D676850673D3D, _binary 0x6E5653726837676135614D41526C6C2B4E374C734F673D3D, _binary 0x2B464C5338694A737A3971574E334F376C61793042513D3D),
	(_binary 0x5A31514C4B41732F4E555A30676955316A432B4C46347A33756B6A47553031315441376F6B4C38374A49453D, NULL, _binary 0x42363643524C6670504A4E44314B4F38583947784E513D3D, _binary 0x4271354E48643174456F51304D76484D686E75317A673D3D, _binary 0x37484149486D70652F572B485856324D7479344838673D3D);
ALTER TABLE Lot add CONSTRAINT FK_LOT_ACHETEUR FOREIGN KEY  (idAcheteur) references Acheteur (id) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE Lot add CONSTRAINT FK_LOT_FACTURE FOREIGN KEY  (idFacture) references Facture (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE Facture DROP COLUMN etatPaiement;
ALTER TABLE Facture ADD COLUMN montant float;
ALTER TABLE Facture ADD COLUMN etatPaiement smallint(6) DEFAULT NULL;
ALTER TABLE Lot ADD COLUMN dateinsert DATETIME NOT NULL DEFAULT NOW();
ALTER TABLE Lot ADD COLUMN datemodif DATETIME NOT NULL DEFAULT NOW();
ALTER TABLE Lot ADD COLUMN iduserinsert INTEGER UNSIGNED NOT NULL DEFAULT 0;
ALTER TABLE Lot ADD COLUMN idusermodif INTEGER UNSIGNED NOT NULL DEFAULT 0;
ALTER TABLE Lot ALTER COLUMN iduserinsert DROP DEFAULT;
ALTER TABLE Lot ALTER COLUMN idusermodif DROP DEFAULT;
ALTER TABLE Lot add CONSTRAINT FK_LOT_UTILISATEUR_INSERT FOREIGN KEY  (iduserinsert) references Utilisateur (id) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE Lot add CONSTRAINT FK_LOT_UTILISATEUR_MODIF FOREIGN KEY  (idusermodif) references Utilisateur (id) ON DELETE RESTRICT ON UPDATE RESTRICT;
CREATE TABLE Directeurvente
(
    id                    INTEGER   UNSIGNED    NOT NULL,
    clesession VARCHAR(256) NULL,
    CONSTRAINT PK_Directeurvente PRIMARY KEY (id),
  	CONSTRAINT FK_Directeurvente_UTILISATEUR FOREIGN KEY  (id) references Utilisateur (id)
    
) ENGINE = INNODB;
INSERT INTO Directeurvente(id) SELECT id FROM Utilisateur WHERE idtypeuser=4;
CREATE TABLE Histoconnexion
(
    id  INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
    dateConnexion  DATETIME(3)    NOT NULL default CURRENT_TIMESTAMP(3),
    AdresseIP VARCHAR(50) NOT NULL,
    result BOOLEAN NOT NULL,
    idUtilisateur INTEGER UNSIGNED NULL,
    CONSTRAINT PK_HISTOCONNEXION PRIMARY KEY (id),
  	CONSTRAINT FK_HISTOCONNEXION_UTILISATEUR FOREIGN KEY  (idUtilisateur) references Utilisateur (id),
    CONSTRAINT INDEX_HISTOCONNEXION UNIQUE INDEX (dateConnexion, AdresseIP)
    
) ENGINE = INNODB;
ALTER TABLE Histoconnexion CHANGE COLUMN `AdresseIP` `AdresseIP` VARBINARY(128) NULL DEFAULT NULL COLLATE 'binary' AFTER `dateConnexion`;
UPDATE Espece SET nom='Araignée de mer casier' WHERE id=42040;
UPDATE Espece SET nom='Araignée de mer chalut' WHERE id=42041;
UPDATE Espece SET nom='Mérou ou cernier' WHERE id=33110;
UPDATE Espece SET nom='Mérou noir' WHERE id=33120;
DROP PROCEDURE Auth;
DELIMITER $
CREATE PROCEDURE Auth(
    IN val1 VARCHAR(100),
  IN val2 VARCHAR(250)
)
BEGIN
    SET GLOBAL sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
    SET SESSION sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
    SELECT count(Utilisateur.id) as nbUser, Utilisateur.id as iduser, login, nomuser, prenomuser, idtypeuser, libelle, adrMail
    FROM Utilisateur INNER JOIN TypeUtilisateur ON Utilisateur.idtypeuser = TypeUtilisateur.id
    WHERE login=val1 AND pwd=val2 AND idtypeuser<5;
END$
DELIMITER ;
ALTER TABLE Peche ADD Constraint INDEX_PECHE unique index (datePeche,idBateau);
ALTER TABLE Peche DROP PRIMARY KEY, ADD COLUMN id INTEGER NOT NULL AUTO_INCREMENT FIRST, ADD CONSTRAINT PK_PECHE PRIMARY KEY(id);
ALTER TABLE Bac CHANGE id numBac NUMERIC(3) UNSIGNED;
ALTER TABLE Bac DROP FOREIGN KEY FK_BAC_LOT;
ALTER TABLE Bac DROP INDEX FK_BAC_LOT;
ALTER TABLE Bac ADD Constraint INDEX_BAC unique index (numBac,idDatePeche,idBateau, idLot);
ALTER TABLE Bac DROP PRIMARY KEY, ADD COLUMN id INTEGER NOT NULL AUTO_INCREMENT FIRST, ADD CONSTRAINT PK_BAC PRIMARY KEY(id);
ALTER TABLE Lot CHANGE id idLot decimal(3,0) UNSIGNED;
ALTER TABLE Lot ADD Constraint INDEX_LOT unique index (idDatePeche,idBateau, idLot);
ALTER TABLE Lot DROP PRIMARY KEY, ADD COLUMN id INTEGER NOT NULL AUTO_INCREMENT FIRST, ADD CONSTRAINT PK_LOT PRIMARY KEY(id);
ALTER TABLE Bac ADD CONSTRAINT FK_BAC_LOT FOREIGN KEY  (idDatePeche,idBateau,idLot) references Lot (idDatePeche,idBateau,idLot) ON DELETE RESTRICT ON UPDATE RESTRICT;
CREATE TABLE Poster
(
    id INTEGER    UNSIGNED AUTO_INCREMENT NOT NULL,
    idDatePeche           DATE                  NOT NULL,
    idBateau              INTEGER   UNSIGNED    NOT NULL,
    idLot                 NUMERIC(3) UNSIGNED   NOT NULL,
    idAcheteur            INTEGER   UNSIGNED    NOT NULL,
    prixEnchere       	  DECIMAL(6,2)                  ,
	  HeureEnchere    	  DateTime	                       ,
    CONSTRAINT PK_POSTER PRIMARY KEY (id), 
    CONSTRAINT FK_POSTER_LOT FOREIGN KEY  (idDatePeche,idBateau,idLot) references Lot (idDatePeche,idBateau,idLot),
    CONSTRAINT FK_POSTER_ACHETEUR FOREIGN KEY  (idAcheteur) references Acheteur (id)
)
ENGINE = INNODB;
ALTER TABLE Poster ADD Constraint INDEX_POSTER unique index (idDatePeche,idBateau, idLot, idAcheteur);
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-18', 11, 1, 6, 7.45, '2020-07-18 10:17:08');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-18', 11, 1, 8, 6.55, '2020-07-18 10:15:18');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-18', 11, 1, 9, 7.50, '2020-07-18 10:17:48');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-18', 11, 2, 6, 7.55, '2020-07-18 10:18:37');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-18', 11, 2, 7, 8.50, '2020-07-18 10:20:59');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-18', 11, 2, 8, 8.35, '2020-07-18 10:20:48');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-18', 11, 2, 9, 7.50, '2020-07-18 10:18:23');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-18', 11, 3, 7, 7.70, '2020-07-18 10:21:48');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-18', 11, 3, 9, 8.50, '2020-07-18 10:22:13');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-18', 11, 4, 6, 9.50, '2020-07-18 10:22:13');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-18', 11, 4, 7, 10.00, '2020-07-18 10:22:13');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-18', 11, 5, 9, 8.50, '2020-07-18 10:22:13');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-18', 11, 5, 7, 8.75, '2020-07-18 10:22:13');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-20', 11, 1, 6, 7.45, '2020-07-20 10:17:08');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-20', 11, 1, 7, 7.80, '2020-07-20 10:17:48');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-20', 11, 1, 8, 6.55, '2020-07-20 10:15:18');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-20', 11, 2, 6, 8.35, '2020-07-20 10:20:48');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-20', 11, 2, 7, 8.50, '2020-07-20 10:20:59');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-20', 11, 2, 8, 8.55, '2020-07-20 10:21:18');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-20', 11, 2, 9, 7.50, '2020-07-20 10:18:23');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-21', 11, 1, 6, 8.50, '2020-07-21 10:22:13');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-21', 11, 1, 7, 7.70, '2020-07-21 10:21:48');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-21', 11, 2, 7, 7.70, '2020-07-21 10:21:48');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-21', 11, 2, 8, 8.95, '2020-07-21 10:22:13');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-30',  7, 1, 9, 17.50, '2020-07-30 11:02:53');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-30',  7, 2, 8, 16.50, '2020-07-30 11:06:53');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-30', 11, 1, 7, 8.70, '2020-07-30 11:09:53');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-30',  1, 1, 7, 7.20, '2020-07-30 11:12:53');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-30',  1, 2, 7, 9.75, '2020-07-30 11:16:53');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-30',  1, 3, 6, 14.20, '2020-07-30 11:20:53');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-30',  3, 1, 6, 14.60, '2020-07-30 11:26:53');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-30',  3, 2, 6, 15.50, '2020-07-30 11:30:53');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-30',  7, 1, 6, 15.50, '2020-07-30 11:30:58');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-30',  1, 8, 6, 12.50, '2020-07-30 11:30:54');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-07-30',  3, 5, 6, 14.10, '2020-07-30 11:30:53');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-08-25',  3, 1, 9, 4.00, '2020-08-25 15:12:26');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-08-25',  3, 2, 8, 6.00, '2020-08-25 15:17:12');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-08-25',  3, 2, 9, 7.00, '2020-08-25 15:18:53');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-08-25',  3, 3, 8, 7.00, '2020-08-25 15:21:44');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-08-25',  3, 3, 9, 8.00, '2020-08-25 15:22:13');
INSERT INTO `Poster`(idDatePeche,idBateau,idLot,idAcheteur,prixEnchere,HeureEnchere) VALUES ('2020-08-25', 11, 1, 9, 23.00, '2020-08-25 16:41:34');
ALTER TABLE Facture ADD COLUMN dateinsert DATETIME NOT NULL DEFAULT NOW();
ALTER TABLE Facture ADD COLUMN datemodif DATETIME NOT NULL DEFAULT NOW();
ALTER TABLE Acheteur DROP COLUMN clesession;
ALTER TABLE Acheteur ADD COLUMN statutCompte INT(1) DEFAULT 0 NOT NULL;
ALTER TABLE Acheteur ADD COLUMN clesession VARCHAR(256) NULL;
UPDATE Acheteur SET statutCompte=1;
ALTER TABLE Peche ADD COLUMN heureArrivee TIME NULL;
UPDATE Lot SET codeEtat = 'C' WHERE codeEtat IS NULL;
ALTER TABLE Lot MODIFY codeEtat char(1) DEFAULT 'C' NOT NULL;
ALTER TABLE Bac MODIFY poidsbrutBac DECIMAL(6,2) DEFAULT '0.00' NULL;
CREATE TABLE Etat
(
    id INTEGER    UNSIGNED AUTO_INCREMENT NOT NULL,
    codeEtat           char(1)                  NOT NULL,
    descriptionEtat              VARCHAR(500)   NULL,
    CONSTRAINT PK_ETAT PRIMARY KEY (id),
    CONSTRAINT INDEX_ETAT UNIQUE INDEX (codeEtat)
)
ENGINE = INNODB;
UPDATE Lot SET codeEtat='T' WHERE codeEtat='L';
INSERT INTO Etat(codeEtat, descriptionEtat) VALUES ('C', 'Lot crée'), ('M', 'Lot marqué et pesé'), ('E', 'Lot prêt à la vente'), ('A', 'Lot clôturé : pour équarrisage, non vendu'), ('D', 'Lot clôturé : à donner pour une association'), ('T' , 'Lot clôturé : acheté par un acheteur'), ('F' , 'Lot à clôturer : sans acheteur');
ALTER TABLE Lot ADD CONSTRAINT FK_LOT_ETAT FOREIGN KEY  (codeEtat) references Etat (codeEtat) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE Utilisateur ADD Constraint INDEX_UTILISATEUR_LOGIN unique index (login);
UPDATE TypeUtilisateur SET libelle='Réceptionniste' WHERE id=3;
UPDATE TypeUtilisateur SET libelle='Vétérinaire' WHERE id=2;
UPDATE Qualite SET libelle='glacé' WHERE id='A';
UPDATE Qualite SET libelle='déclassé' WHERE id='B';
UPDATE Presentation SET libelle='Etété' WHERE id='ET';
UPDATE Presentation SET libelle='Vidé' WHERE id='VID';
UPDATE Etat SET descriptionEtat='Lot marqué et pesé, prix à saisir' WHERE codeEtat='M'; 
INSERT INTO Etat(codeEtat, descriptionEtat) VALUES ('V', 'Lot en cours de vente');
ALTER TABLE Histoconnexion MODIFY dateConnexion DATETIME(3) NOT NULL;
ALTER TABLE Utilisateur ADD Constraint INDEX_UTILISATEUR_ADRMAIL unique index (adrMail);
DROP TRIGGER IF EXISTS UPD_DIRECTEURVENTE_ID;
DELIMITER //
CREATE TRIGGER UPD_DIRECTEURVENTE_ID BEFORE UPDATE ON Directeurvente
FOR EACH ROW
BEGIN
IF NOT EXISTS (SELECT id FROM Utilisateur WHERE idtypeuser=4 AND id=NEW.id) THEN
SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'L''utilisateur entré n''est pas un directeur des ventes';
END IF;
END//
DELIMITER ;
DROP TRIGGER IF EXISTS UPD_ACHETEUR_ID;
DELIMITER //
CREATE TRIGGER UPD_ACHETEUR_ID BEFORE UPDATE ON Acheteur
FOR EACH ROW
BEGIN
IF NOT EXISTS (SELECT id FROM Utilisateur WHERE idtypeuser=5 AND id=NEW.id) THEN
SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'L''utilisateur entré n''est pas un acheteur';
END IF;
END//
DELIMITER ;
DROP TRIGGER IF EXISTS IST_DIRECTEURVENTE_ID;
DELIMITER //
CREATE TRIGGER IST_DIRECTEURVENTE_ID BEFORE INSERT ON Directeurvente
FOR EACH ROW
BEGIN
IF NOT EXISTS (SELECT id FROM Utilisateur WHERE idtypeuser=4 AND id=NEW.id) THEN
SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'L''utilisateur entré n''est pas un directeur des ventes';
END IF;
END//
DELIMITER ;
DROP TRIGGER IF EXISTS IST_ACHETEUR_ID;
DELIMITER //
CREATE TRIGGER IST_ACHETEUR_ID BEFORE INSERT ON Acheteur
FOR EACH ROW
BEGIN
IF NOT EXISTS (SELECT id FROM Utilisateur WHERE idtypeuser=5 AND id=NEW.id) THEN
SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'L''utilisateur entré n''est pas un acheteur';
END IF;
END//
DELIMITER ;
DROP TRIGGER IF EXISTS UPD_UTILISATEUR_IDTYPEUSER;
DELIMITER //
CREATE TRIGGER UPD_UTILISATEUR_IDTYPEUSER BEFORE UPDATE ON Utilisateur
FOR EACH ROW
BEGIN
IF NEW.idtypeuser<4 THEN
IF EXISTS (SELECT id FROM Directeurvente WHERE id=NEW.id) THEN
SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Erreur de contrainte avec la table ''Directeurvente'' sur le champ ''id''';
END IF;
IF EXISTS (SELECT id FROM Acheteur WHERE id=NEW.id) THEN
SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Erreur de contrainte avec la table ''Acheteur'' sur le champ ''id''';
END IF;
END IF;
IF NEW.idtypeuser=4 THEN
IF EXISTS (SELECT id FROM Acheteur WHERE id=NEW.id)THEN
SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Erreur de contrainte avec la table ''Acheteur'' sur le champ ''id''';
END IF;
END IF;
IF NEW.idtypeuser=5 THEN
IF EXISTS (SELECT id FROM Directeurvente WHERE id=NEW.id)THEN
SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Erreur de contrainte avec la table ''Directeurvente'' sur le champ ''id''';
END IF;
END IF;
END//
DELIMITER ;
DROP TRIGGER IF EXISTS DEL_HISTOCONNEXION;
DELIMITER //
CREATE TRIGGER DEL_HISTOCONNEXION BEFORE DELETE ON Histoconnexion
FOR EACH ROW
BEGIN
IF(abs(datediff(CURDATE(),OLD.dateConnexion))<30)THEN
SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Impossible de supprimer un enregistrement de la table ''Histoconnexion'' inférieur à 30 jours';
END IF;
END//
DELIMITER ;
DROP PROCEDURE IF EXISTS UPDATE_USER;
DELIMITER -
CREATE PROCEDURE UPDATE_USER (idusr INT, loginusr VARCHAR(300), nomusr VARCHAR(300), prenomusr VARCHAR(300), labeltypeusr VARCHAR(300), adrMailusr VARCHAR(300))
BEGIN
DECLARE typeusr INT;
SET typeusr = (SELECT id FROM TypeUtilisateur WHERE libelle=labeltypeusr);
IF(typeusr<4)THEN
DELETE FROM Directeurvente WHERE id=idusr;
UPDATE Utilisateur SET login=loginusr, nomuser=nomusr, prenomuser=prenomusr, idtypeuser=typeusr, adrMail=adrMailusr WHERE id=idusr;
END IF;
IF(typeusr=4)THEN
UPDATE Utilisateur SET login=loginusr, nomuser=nomusr, prenomuser=prenomusr, idtypeuser=typeusr, adrMail=adrMailusr WHERE id=idusr;
IF NOT EXISTS (SELECT id FROM Directeurvente WHERE id=idusr) THEN
INSERT INTO Directeurvente (id) VALUES (idusr);
END IF;
END IF;
END -
DELIMITER ;
ALTER TABLE Histoconnexion DROP FOREIGN KEY FK_HISTOCONNEXION_UTILISATEUR;
ALTER TABLE Histoconnexion ADD CONSTRAINT FK_HISTOCONNEXION_UTILISATEUR FOREIGN KEY (idUtilisateur) REFERENCES bddCrie2.Utilisateur (id) ON UPDATE RESTRICT ON DELETE SET NULL;
SET GLOBAL sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
SET SESSION sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
DROP TRIGGER IF EXISTS UPD_HISTOCONNEXION;
DELIMITER //
CREATE TRIGGER UPD_HISTOCONNEXION BEFORE UPDATE ON Histoconnexion
FOR EACH ROW
BEGIN
SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Impossible de modifier la table ''Histoconnexion''';
END//
DELIMITER ;
ALTER TABLE Poster DROP FOREIGN KEY FK_POSTER_LOT; 
ALTER TABLE Poster DROP KEY INDEX_POSTER; 
ALTER TABLE Poster ADD CONSTRAINT FK_POSTER_LOT FOREIGN KEY (idDatePeche, idBateau, idLot) REFERENCES Lot (idDatePeche, idBateau, idLot);
ALTER TABLE Lot DROP FOREIGN KEY FK_LOT_ACHETEUR;
ALTER TABLE Lot ADD CONSTRAINT FK_LOT_ACHETEUR FOREIGN KEY (idAcheteur) REFERENCES bddCrie2.Acheteur (id) ON UPDATE RESTRICT ON DELETE SET NULL;
ALTER TABLE Lot ADD COLUMN HeureFinEnchere DATETIME AFTER idAcheteur;
SET FOREIGN_KEY_CHECKS = 1;